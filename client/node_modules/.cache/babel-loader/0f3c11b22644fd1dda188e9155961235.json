{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prosjekt Tore\\\\client\\\\src\\\\components\\\\Navigation.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getNav } from '../utils/navService';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n  console.log(data);\n  /* henter nav-data fra sanity */\n\n  useEffect(() => {\n    const fetchDataAsync = async () => {\n      setLoading(true);\n\n      try {\n        const navigation = await getNav('header');\n        setData(navigation);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDataAsync();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (data === null || data === void 0 ? void 0 : data.length) > 0 && data.map(link => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: link.link.name\n        }, link.link._key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"zzftc7KK+fKkf+FTc61ZRBaeV24=\");\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["D:/Prosjekt Tore/client/src/components/Navigation.js"],"names":["useEffect","useState","getNav","NavLink","Navigation","data","setData","loading","setLoading","error","setError","console","log","fetchDataAsync","navigation","length","map","link","name","_key"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG,YAAY;AACjCL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMM,UAAU,GAAG,MAAMZ,MAAM,CAAC,QAAD,CAA/B;AACAI,QAAAA,OAAO,CAACQ,UAAD,CAAP;AACD,OAHD,CAGE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OALD,SAKU;AACRD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVD;;AAWAK,IAAAA,cAAc;AACf,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,kBACE,CAAAR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEU,MAAN,IAAe,CAAf,IACDV,IAAI,CAACW,GAAL,CAAUC,IAAD,iBACP;AAAA,oBAA0BA,IAAI,CAACA,IAAL,CAAUC;AAApC,WAASD,IAAI,CAACA,IAAL,CAAUE,IAAnB;AAAA;AAAA;AAAA;AAAA,gBADF;AAFD;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCD;;GAAMf,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getNav } from '../utils/navService';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  console.log(data);\r\n  /* henter nav-data fra sanity */\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const navigation = await getNav('header');\r\n        setData(navigation);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDataAsync();\r\n  }, []);\r\n\r\n  return (\r\n    <header>\r\n      <section>\r\n        <ul>\r\n         {data?.length > 0 &&\r\n         data.map((link) => (\r\n           <li key={link.link._key}>{link.link.name}</li>\r\n         ))\r\n         }\r\n        </ul>\r\n        <p>Tore</p>\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}