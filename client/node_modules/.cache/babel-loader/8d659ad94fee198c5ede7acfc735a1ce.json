{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prosjekt Tore\\\\client\\\\src\\\\components\\\\Images.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getImage } from '../utils/imageService';\nimport { urlFor } from '../utils/imageUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Images = () => {\n  _s();\n\n  var _bilder$raw;\n\n  const [bilder, setBilder] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(bilder);\n  useEffect(() => {\n    const fetchImagesAsync = async () => {\n      setLoading(true);\n\n      try {\n        const data = await getImage();\n        setBilder(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchImagesAsync();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bilder lastes..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this) : null, error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Noe har skjedd: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this) : null, (bilder === null || bilder === void 0 ? void 0 : (_bilder$raw = bilder.raw) === null || _bilder$raw === void 0 ? void 0 : _bilder$raw.length) > 0 && bilder.raw.map(images => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(images === null || images === void 0 ? void 0 : images.image).width(700).format('webp').url(),\n        alt: images.alt\n      }, images.image.asset._ref, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n        children: images.bildetekst\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Images, \"EttbqElkcK/dyel2e5cj4MxGlIY=\");\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["D:/Prosjekt Tore/client/src/components/Images.js"],"names":["useEffect","useState","getImage","urlFor","Images","bilder","setBilder","loading","setLoading","error","setError","console","log","fetchImagesAsync","data","raw","length","map","images","image","width","format","url","alt","asset","_ref","bildetekst"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,gBAAgB,GAAG,YAAY;AACnCL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMM,IAAI,GAAG,MAAMZ,QAAQ,EAA3B;AACAI,QAAAA,SAAS,CAACQ,IAAD,CAAT;AACD,OAHD,CAGE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OALD,SAKU;AACRD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVD;;AAWAK,IAAAA,gBAAgB;AACjB,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,eACKN,OAAO,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,GAA2B,IADvC,EAEME,KAAK,gBAAE;AAAA,qCAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,GAAmC,IAF9C,EAGO,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,2BAAAA,MAAM,CAAEU,GAAR,4DAAaC,MAAb,IAAsB,CAAtB,IACDX,MAAM,CAACU,GAAP,CAAWE,GAAX,CAAgBC,MAAD,iBACX;AAAA,8BACA;AAAmC,QAAA,GAAG,EAAEf,MAAM,CAACe,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,KAAT,CAAN,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiCC,MAAjC,CAAwC,MAAxC,EAAgDC,GAAhD,EAAxC;AAA+F,QAAA,GAAG,EAAEJ,MAAM,CAACK;AAA3G,SAAUL,MAAM,CAACC,KAAP,CAAaK,KAAb,CAAmBC,IAA7B;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAaP,MAAM,CAACQ;AAApB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlCD;;GAAMtB,M;;KAAAA,M;AAmCN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getImage } from '../utils/imageService';\r\nimport { urlFor } from '../utils/imageUrl';\r\n\r\nconst Images = () => {\r\n  const [bilder, setBilder] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  console.log(bilder);\r\n\r\n  useEffect(() => {\r\n    const fetchImagesAsync = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await getImage();\r\n        setBilder(data);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchImagesAsync();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n        {loading? <p>Bilder lastes..</p> : null}\r\n         {error? <p>Noe har skjedd: {error}</p> : null}\r\n          {bilder?.raw?.length > 0 &&\r\n          bilder.raw.map((images) => (\r\n              <div>\r\n              <img key={images.image.asset._ref} src={urlFor(images?.image).width(700).format('webp').url()} alt={images.alt}/>\r\n              <figcaption>{images.bildetekst}</figcaption>\r\n              </div>\r\n          ))}\r\n    </section>\r\n  )\r\n};\r\nexport default Images;\r\n"]},"metadata":{},"sourceType":"module"}