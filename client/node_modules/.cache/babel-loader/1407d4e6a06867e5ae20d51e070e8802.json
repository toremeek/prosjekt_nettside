{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prosjekt Tore\\\\client\\\\src\\\\components\\\\Navigation.js\",\n    _s = $RefreshSig$();\n\nimport { NavLink } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getNav } from '../utils/navService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = () => {\n  _s();\n\n  var _data$link, _data$link2;\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n  console.log(data);\n  /* henter nav-data fra sanity */\n\n  useEffect(() => {\n    const fetchDataAsync = async () => {\n      setLoading(true);\n\n      try {\n        const navigation = await getNav('header');\n        setData(navigation);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDataAsync();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (data === null || data === void 0 ? void 0 : (_data$link = data.link) === null || _data$link === void 0 ? void 0 : _data$link.length) > 0 && (data === null || data === void 0 ? void 0 : (_data$link2 = data.link) === null || _data$link2 === void 0 ? void 0 : _data$link2.map(nav => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: nav.name\n      }, nav._key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 36\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hei\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"zzftc7KK+fKkf+FTc61ZRBaeV24=\");\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["D:/Prosjekt Tore/client/src/components/Navigation.js"],"names":["NavLink","useEffect","useState","getNav","Navigation","data","setData","loading","setLoading","error","setError","console","log","fetchDataAsync","navigation","link","length","map","nav","name","_key"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,cAAc,GAAG,YAAY;AACjCL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMM,UAAU,GAAG,MAAMX,MAAM,CAAC,QAAD,CAA/B;AACAG,QAAAA,OAAO,CAACQ,UAAD,CAAP;AACD,OAHD,CAGE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OALD,SAKU;AACRD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVD;;AAWAK,IAAAA,cAAc;AACf,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,4BACE;AAAA,gBACG,CAAAR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,0BAAAA,IAAI,CAAEU,IAAN,0DAAYC,MAAZ,IAAqB,CAArB,KACCX,IADD,aACCA,IADD,sCACCA,IAAI,CAAEU,IADP,gDACC,YAAYE,GAAZ,CAAiBC,GAAD,iBAAS;AAAA,kBAAoBA,GAAG,CAACC;AAAxB,SAASD,GAAG,CAACE,IAAb;AAAA;AAAA;AAAA;AAAA,cAAzB,CADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMhB,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { getNav } from '../utils/navService';\r\n\r\nconst Navigation = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  console.log(data);\r\n  /* henter nav-data fra sanity */\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const navigation = await getNav('header');\r\n        setData(navigation);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDataAsync();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <ul>\r\n        {data?.link?.length > 0 &&\r\n          data?.link?.map((nav) => <li key={nav._key}>{nav.name}</li>)}\r\n      </ul>\r\n      <p>Hei</p>\r\n    </section>\r\n  );\r\n};\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}