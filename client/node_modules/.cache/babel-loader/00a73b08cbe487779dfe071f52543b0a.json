{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prosjekt Tore\\\\client\\\\src\\\\components\\\\Images.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getImage } from '../utils/imageService';\nimport { urlFor } from '../utils/imageUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Images = () => {\n  _s();\n\n  const [bilder, setBilder] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  console.log(bilder);\n  useEffect(() => {\n    const fetchDataAsync = async () => {\n      setLoading(true);\n\n      try {\n        const data = await getImage();\n        setBilder(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDataAsync();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: (bilder === null || bilder === void 0 ? void 0 : bilder.length) > 0 && bilder.map((images, index) => {\n      var _images$raw;\n\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(images === null || images === void 0 ? void 0 : (_images$raw = images.raw) === null || _images$raw === void 0 ? void 0 : _images$raw.image).width(600).format('webp').url(),\n        alt: images.alt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Images, \"EttbqElkcK/dyel2e5cj4MxGlIY=\");\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["D:/Prosjekt Tore/client/src/components/Images.js"],"names":["useEffect","useState","getImage","urlFor","Images","bilder","setBilder","loading","setLoading","error","setError","console","log","fetchDataAsync","data","length","map","images","index","raw","image","width","format","url","alt"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG,YAAY;AACjCL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMM,IAAI,GAAG,MAAMZ,QAAQ,EAA3B;AACAI,QAAAA,SAAS,CAACQ,IAAD,CAAT;AACD,OAHD,CAGE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OALD,SAKU;AACRD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVD;;AAWAK,IAAAA,cAAc;AACf,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,cACO,CAAAR,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEU,MAAR,IAAiB,CAAjB,IACDV,MAAM,CAACW,GAAP,CAAW,CAACC,MAAD,EAASC,KAAT;AAAA;;AAAA,0BACP;AAAiB,QAAA,GAAG,EAAEf,MAAM,CAACc,MAAD,aAACA,MAAD,sCAACA,MAAM,CAAEE,GAAT,gDAAC,YAAaC,KAAd,CAAN,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsCC,MAAtC,CAA6C,MAA7C,EAAqDC,GAArD,EAAtB;AAAkF,QAAA,GAAG,EAAEN,MAAM,CAACO;AAA9F,SAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,cADO;AAAA,KAAX;AAFN;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7BD;;GAAMd,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getImage } from '../utils/imageService';\r\nimport { urlFor } from '../utils/imageUrl';\r\n\r\nconst Images = () => {\r\n  const [bilder, setBilder] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  console.log(bilder);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAsync = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await getImage();\r\n        setBilder(data);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDataAsync();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n          {bilder?.length > 0 &&\r\n          bilder.map((images, index) => (\r\n              <img key={index} src={urlFor(images?.raw?.image).width(600).format('webp').url()} alt={images.alt}/>\r\n          ))}\r\n    </section>\r\n  )\r\n};\r\nexport default Images;\r\n"]},"metadata":{},"sourceType":"module"}