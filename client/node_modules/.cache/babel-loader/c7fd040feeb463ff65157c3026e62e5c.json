{"ast":null,"code":"import client from './client';\nconst articleFields = `\n\t_createdAt,\n\t_id,\n\t_type,\n\t'authors': author[]->{first, last, _id, 'slug': slug.current},\n\t'categories': category[]->{category, _id},\n\tclickbait,\n\t'content': content[]{...}\n\t,\n\tfeatured,\n\t'links': link[]{\n\t\t_key,\n\t\tname,\n\t\thref\n\t},\n\t'img': image{\n\t\talt,\n\t\timage{\n\t\t\tasset->{url}\n\t\t},\n\t},\n\t'raw': image,\n\tpublished,\n\t'slug': slug.current,\n\ttitle,\n`;\nconst personFields = `\n\t_id,\n\t_type,\n\tbio,\n\tfirst,\n\t'img': image{\n\t\talt,\n\t\timage{\n\t\t\tasset->{url}\n\t\t},\n\t},\n\tlast,\n\trole,\n\t'slug': slug.current,\n\t'articles': *[_type == \"articlepage\" && references(^._id)].title,\n\t'articlesslugs': *[_type == \"articlepage\" && references(^._id)].slug.current,\n`;\nconst galleriFields = `\n\t_createdAt,\n\t_id,\n\t'img': image{\n\t\talt,\n\t\timage{\n\t\t\tasset->{url}\n\t\t},\n\t},\n`;\nconst categoriesFields = `\n\t_id,\n\tcategory,\n`;\nconst categoryFields = `\n\t_id,\n\t_type,\n\tcategory,\n\t'articles': *[_type == \"articlepage\" && references(^._id)].title,\n\t'articlesslugs': *[_type == \"articlepage\" && references(^._id)].slug.current,\n`;\nconst courseFields = `\n    ...,\n    'slug': slug.current,\n`;\nlet pagefields = ``;\nexport const getPage = async (source, fields, sortorder) => {\n  if (fields === 'articlefields') {\n    pagefields = articleFields;\n  }\n\n  if (fields === 'personfields') {\n    pagefields = personFields;\n  }\n\n  if (fields === 'gallerifields') {\n    pagefields = galleriFields;\n  }\n\n  if (fields === 'categoriesfields') {\n    pagefields = categoriesFields;\n  }\n\n  if (fields === 'categoryfields') {\n    pagefields = categoryFields;\n  }\n\n  if (fields === 'coursefields') {\n    pagefields = courseFields;\n  }\n\n  const data = await client.fetch(`*[_type == $source]| order(_createdAt ${sortorder || 'desc'}){${pagefields}}`, {\n    source,\n    fields\n  });\n  return data;\n};\nexport const getItem = async (source, fields, slug) => {\n  if (fields === 'articlefields') {\n    pagefields = articleFields;\n  }\n\n  if (fields === 'personfields') {\n    pagefields = personFields;\n  }\n\n  if (fields === 'gallerifields') {\n    pagefields = galleriFields;\n  }\n\n  if (fields === 'categoryfields') {\n    pagefields = categoryFields;\n  }\n\n  if (fields === 'coursefields') {\n    pagefields = courseFields;\n  }\n\n  const data = await client.fetch(`*[_type == $source && slug.current == $slug]{${pagefields}}`, {\n    slug,\n    source,\n    fields\n  });\n  return data === null || data === void 0 ? void 0 : data[0];\n};","map":{"version":3,"sources":["D:/Prosjekt Tore/client/src/utils/imageService.js"],"names":["client","articleFields","personFields","galleriFields","categoriesFields","categoryFields","courseFields","pagefields","getPage","source","fields","sortorder","data","fetch","getItem","slug"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,MAAMC,aAAa,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;AA2BA,MAAMC,YAAY,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,MAAMC,aAAa,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMC,gBAAgB,GAAI;AAC1B;AACA;AACA,CAHA;AAKA,MAAMC,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMC,YAAY,GAAI;AACtB;AACA;AACA,CAHA;AAKA,IAAIC,UAAU,GAAI,EAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAOC,MAAP,EAAeC,MAAf,EAAuBC,SAAvB,KAAqC;AAC1D,MAAID,MAAM,KAAK,eAAf,EAAgC;AAC9BH,IAAAA,UAAU,GAAGN,aAAb;AACD;;AACD,MAAIS,MAAM,KAAK,cAAf,EAA+B;AAC7BH,IAAAA,UAAU,GAAGL,YAAb;AACD;;AACD,MAAIQ,MAAM,KAAK,eAAf,EAAgC;AAC9BH,IAAAA,UAAU,GAAGJ,aAAb;AACD;;AACD,MAAIO,MAAM,KAAK,kBAAf,EAAmC;AACjCH,IAAAA,UAAU,GAAGH,gBAAb;AACD;;AACD,MAAIM,MAAM,KAAK,gBAAf,EAAiC;AAC/BH,IAAAA,UAAU,GAAGF,cAAb;AACD;;AACD,MAAIK,MAAM,KAAK,cAAf,EAA+B;AAC7BH,IAAAA,UAAU,GAAGD,YAAb;AACD;;AACD,QAAMM,IAAI,GAAG,MAAMZ,MAAM,CAACa,KAAP,CAChB,yCACCF,SAAS,IAAI,MACd,KAAIJ,UAAW,GAHC,EAIjB;AACEE,IAAAA,MADF;AAEEC,IAAAA;AAFF,GAJiB,CAAnB;AASA,SAAOE,IAAP;AACD,CA7BM;AA+BP,OAAO,MAAME,OAAO,GAAG,OAAOL,MAAP,EAAeC,MAAf,EAAuBK,IAAvB,KAAgC;AACrD,MAAIL,MAAM,KAAK,eAAf,EAAgC;AAC9BH,IAAAA,UAAU,GAAGN,aAAb;AACD;;AACD,MAAIS,MAAM,KAAK,cAAf,EAA+B;AAC7BH,IAAAA,UAAU,GAAGL,YAAb;AACD;;AACD,MAAIQ,MAAM,KAAK,eAAf,EAAgC;AAC9BH,IAAAA,UAAU,GAAGJ,aAAb;AACD;;AACD,MAAIO,MAAM,KAAK,gBAAf,EAAiC;AAC/BH,IAAAA,UAAU,GAAGF,cAAb;AACD;;AACD,MAAIK,MAAM,KAAK,cAAf,EAA+B;AAC7BH,IAAAA,UAAU,GAAGD,YAAb;AACD;;AACD,QAAMM,IAAI,GAAG,MAAMZ,MAAM,CAACa,KAAP,CAChB,gDAA+CN,UAAW,GAD1C,EAEjB;AACEQ,IAAAA,IADF;AAEEN,IAAAA,MAFF;AAGEC,IAAAA;AAHF,GAFiB,CAAnB;AAQA,SAAOE,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAG,CAAH,CAAX;AACD,CAzBM","sourcesContent":["import client from './client';\r\n\r\nconst articleFields = `\r\n\t_createdAt,\r\n\t_id,\r\n\t_type,\r\n\t'authors': author[]->{first, last, _id, 'slug': slug.current},\r\n\t'categories': category[]->{category, _id},\r\n\tclickbait,\r\n\t'content': content[]{...}\r\n\t,\r\n\tfeatured,\r\n\t'links': link[]{\r\n\t\t_key,\r\n\t\tname,\r\n\t\thref\r\n\t},\r\n\t'img': image{\r\n\t\talt,\r\n\t\timage{\r\n\t\t\tasset->{url}\r\n\t\t},\r\n\t},\r\n\t'raw': image,\r\n\tpublished,\r\n\t'slug': slug.current,\r\n\ttitle,\r\n`;\r\n\r\nconst personFields = `\r\n\t_id,\r\n\t_type,\r\n\tbio,\r\n\tfirst,\r\n\t'img': image{\r\n\t\talt,\r\n\t\timage{\r\n\t\t\tasset->{url}\r\n\t\t},\r\n\t},\r\n\tlast,\r\n\trole,\r\n\t'slug': slug.current,\r\n\t'articles': *[_type == \"articlepage\" && references(^._id)].title,\r\n\t'articlesslugs': *[_type == \"articlepage\" && references(^._id)].slug.current,\r\n`;\r\n\r\nconst galleriFields = `\r\n\t_createdAt,\r\n\t_id,\r\n\t'img': image{\r\n\t\talt,\r\n\t\timage{\r\n\t\t\tasset->{url}\r\n\t\t},\r\n\t},\r\n`;\r\n\r\nconst categoriesFields = `\r\n\t_id,\r\n\tcategory,\r\n`;\r\n\r\nconst categoryFields = `\r\n\t_id,\r\n\t_type,\r\n\tcategory,\r\n\t'articles': *[_type == \"articlepage\" && references(^._id)].title,\r\n\t'articlesslugs': *[_type == \"articlepage\" && references(^._id)].slug.current,\r\n`;\r\nconst courseFields = `\r\n    ...,\r\n    'slug': slug.current,\r\n`;\r\n\r\nlet pagefields = ``;\r\n\r\nexport const getPage = async (source, fields, sortorder) => {\r\n  if (fields === 'articlefields') {\r\n    pagefields = articleFields;\r\n  }\r\n  if (fields === 'personfields') {\r\n    pagefields = personFields;\r\n  }\r\n  if (fields === 'gallerifields') {\r\n    pagefields = galleriFields;\r\n  }\r\n  if (fields === 'categoriesfields') {\r\n    pagefields = categoriesFields;\r\n  }\r\n  if (fields === 'categoryfields') {\r\n    pagefields = categoryFields;\r\n  }\r\n  if (fields === 'coursefields') {\r\n    pagefields = courseFields;\r\n  }\r\n  const data = await client.fetch(\r\n    `*[_type == $source]| order(_createdAt ${\r\n      sortorder || 'desc'\r\n    }){${pagefields}}`,\r\n    {\r\n      source,\r\n      fields,\r\n    }\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getItem = async (source, fields, slug) => {\r\n  if (fields === 'articlefields') {\r\n    pagefields = articleFields;\r\n  }\r\n  if (fields === 'personfields') {\r\n    pagefields = personFields;\r\n  }\r\n  if (fields === 'gallerifields') {\r\n    pagefields = galleriFields;\r\n  }\r\n  if (fields === 'categoryfields') {\r\n    pagefields = categoryFields;\r\n  }\r\n  if (fields === 'coursefields') {\r\n    pagefields = courseFields;\r\n  }\r\n  const data = await client.fetch(\r\n    `*[_type == $source && slug.current == $slug]{${pagefields}}`,\r\n    {\r\n      slug,\r\n      source,\r\n      fields,\r\n    }\r\n  );\r\n  return data?.[0];\r\n};"]},"metadata":{},"sourceType":"module"}